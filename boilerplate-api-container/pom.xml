<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017-2020 Micro Focus or one of its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <parent>
        <groupId>com.github.cafdataprocessing</groupId>
        <artifactId>boilerplate-service-aggregator</artifactId>
        <version>2.4.0-SNAPSHOT</version>
    </parent>

    <artifactId>boilerplate-api-container</artifactId>

    <properties>
        <db.name>boilerplate</db.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.cafdataprocessing</groupId>
            <artifactId>boilerplate-api-web</artifactId>
            <type>war</type>
        </dependency>
        <!-- Swagger UI -->
        <dependency>
            <groupId>com.github.cafdataprocessing</groupId>
            <artifactId>boilerplate-api-ui</artifactId>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.boilerplate</groupId>
            <artifactId>boilerplate-web-caller</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Test Logging -->
        <dependency>
            <!--Required at runtime for log4j output-->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <boilerplate.adminport>5555</boilerplate.adminport>
                <postgres.db.port>5432</postgres.db.port>
                <db.connection>jdbc:postgresql://boilerplate-integrationtests-postgres:${postgres.db.port}
                </db.connection>
            </properties>
        </profile>
    </profiles>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <executions>
                    <execution>
                        <id>api-web-Docker</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <boilerplate.adminport>${boilerplate.adminport}</boilerplate.adminport>
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <postgres.db.port>${postgres.db.port}</postgres.db.port>
                        <timeout.ms>60000</timeout.ms>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <hibernate.connectionstring>
                            jdbc:postgresql://boilerplate-integrationtests-postgres:${postgres.db.port}/${db.name}
                        </hibernate.connectionstring>
                        <hibernate.user>postgres</hibernate.user>
                        <hibernate.password>root</hibernate.password>
                        <webserviceurl>http://${docker.host.address}:${boilerplate.adminport}/boilerplateapi</webserviceurl>
                    </environmentVariables>
                    <!--<debugForkedProcess>true</debugForkedProcess>-->
                </configuration>

            </plugin>


            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${fabric8.docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>upload-docker-container</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <filter>boilerplate-api-container</filter>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <autoPull>true</autoPull>
                    <logDate>default</logDate>

                    <images>
                        <!-- pull in a normal postgres DB -->
                        <image>
                            <alias>boilerplate-integrationtests-postgres</alias>
                            <name>${dockerHubPublic}/library/postgres:11</name>
                            <run>
                                <ports>
                                    <port>${postgres.db.port}:5432</port>
                                </ports>
                                <env>
                                    <POSTGRES_PASSWORD>root</POSTGRES_PASSWORD>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                    <POSTGRES_DB>${db.name}</POSTGRES_DB>
                                </env>
                                <wait>
                                    <log>PostgreSQL init process complete; ready for start up.</log>
                                    <time>20000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                        <image>
                            <alias>boilerplate-liquibase-container</alias>
                            <name>${cafBoilerplateDbInstallerContainerName}</name>
                            <run>
                                <links>
                                    <link>boilerplate-integrationtests-postgres</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <cmd>java -jar /boilerplate-db.jar -fd -db.user postgres -db.pass root -db.name ${db.name} -db.connection jdbc:postgresql://boilerplate-integrationtests-postgres:5432 -log debug
                                </cmd>
                                <wait>
                                    <log>DB update finished.</log>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>

                        <image>
                            <alias>boilerplate-api-container</alias>
                            <name>${cafBoilerplateApiContainerName}</name>
                            <build>
                                <from>${dockerHubPublic}/cafapi/opensuse-tomcat-jre11:2</from>
                                <healthCheck>
                                    <mode>none</mode>
                                </healthCheck>
                                <assembly>
                                    <basedir>/usr/share/tomcat</basedir>
                                    <mode>tar</mode>
                                    <inline>
                                        <dependencySets>
                                            <!-- Boilerplate swagger UI -->
                                            <dependencySet>
                                                <outputDirectory>webapps/boilerplate-api-ui</outputDirectory>
                                                <includes>
                                                    <include>com.github.cafdataprocessing:boilerplate-api-ui</include>
                                                </includes>
                                                <unpack>true</unpack>
                                                <useProjectArtifact>false</useProjectArtifact>
                                            </dependencySet>
                                            <dependencySet>
                                                <outputDirectory>webapps/boilerplateapi</outputDirectory>
                                                <includes>
                                                    <include>com.github.cafdataprocessing:boilerplate-api-web</include>
                                                </includes>
                                                <unpack>true</unpack>
                                                <useProjectArtifact>false</useProjectArtifact>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <port>${boilerplate.adminport}:8080</port>
                                </ports>
                                <env>
                                    <hibernate.connectionstring>
                                        jdbc:postgresql://boilerplate-integrationtests-postgres:5432/${db.name}
                                    </hibernate.connectionstring>
                                    <hibernate.user>postgres</hibernate.user>
                                    <hibernate.password>root</hibernate.password>
                                </env>
                                <links>
                                    <link>boilerplate-integrationtests-postgres</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>
                                            http://${docker.host.address}:${boilerplate.adminport}/boilerplateapi/boilerplate/checkhealth?project_id=1
                                        </url>
                                    </http>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
